<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sutn.github.io/</id>
    <title>Suto</title>
    <updated>2021-04-29T09:12:57.240Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sutn.github.io/"/>
    <link rel="self" href="https://sutn.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://sutn.github.io/images/avatar.png</logo>
    <icon>https://sutn.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Suto</rights>
    <entry>
        <title type="html"><![CDATA[凉凉的京东一面]]></title>
        <id>https://sutn.github.io/post/京东一面凉凉/</id>
        <link href="https://sutn.github.io/post/京东一面凉凉/">
        </link>
        <updated>2021-04-29T03:31:24.000Z</updated>
        <content type="html"><![CDATA[<h1 id="凉凉的京东一面">凉凉的京东一面</h1>
<p>相约了4月28日下午4点的面试，面试官因为有事迟到了半小时。</p>
<p>首先上来是自我介绍，大概介绍了一下，因为自己不是科班，是自动化专业，面试的java岗位，面试官也没抱太大希望，上来就问我学的是神经网络的，为什么面java，还有就是自己的规划，确定要走java这条路吗，反正胡扯了一波，然后开始问问题。</p>
<h2 id="1说一下hashmap吧">1.说一下hashmap吧</h2>
<p>大概说了一下hashmap hashtable   线程安全与否</p>
<p>介绍了底层使用数据+链表（红黑树）</p>
<h2 id="2接着就深入为什么使用红黑树自己太菜没看过回答不上来">2.接着就深入，为什么使用红黑树，自己太菜，没看过，回答不上来</h2>
<p>查了一下：</p>
<p>在JDK1.6，JDK1.7中，HashMap采用位桶+链表实现，即使用链表处理冲突，同一hash值的链表都存储在一个链表里。但是当位于一个桶中的元素较多，即hash值相等的元素较多时，通过key值依次查找的效率较低。而JDK1.8中，HashMap采用位桶+链表+红黑树实现，当链表长度超过阈值（8）时，将链表转换为红黑树，这样大大减少了查找时间。</p>
<h2 id="3对线程池了解吗-说一下线程池为什么使用他">3.对线程池了解吗  说一下线程池，为什么使用他</h2>
<p>线程池实现线程复用，极大的提升了资源的利用率，大概说了一下线程池的工作原理，核心线程、等待队列、最大线程数、拒绝该任务等</p>
<h2 id="4-接着深入问说一下这个等待队列">4. 接着深入问说一下这个等待队列？</h2>
<p>听到这个问题有点懵逼，不知道该说一下什么  查了一下<br>
https://segmentfault.com/a/1190000014417569</p>
<h2 id="5-线程池的决绝策略">5. 线程池的决绝策略</h2>
<p>不太了解</p>
<p>说说线程池的拒绝策略</p>
<pre><code>当请求任务不断的过来，而系统此时又处理不过来的时候，我们需要采取的策略是拒绝服务。RejectedExecutionHandler接口提供了拒绝任务处理的自定义方法的机会。在ThreadPoolExecutor中已经包含四种处理策略。

- AbortPolicy策略：该策略会直接抛出异常，阻止系统正常工作。

- CallerRunsPolicy 策略：只要线程池未关闭，该策略直接在调用者线程中，运行当前的被丢弃的任务。

- DiscardOleddestPolicy策略： 该策略将丢弃最老的一个请求，也就是即将被执行的任务，并尝试再次提交当前任务。

- DiscardPolicy策略：该策略默默的丢弃无法处理的任务，不予任何处理。

除了JDK默认提供的四种拒绝策略，我们可以根据自己的业务需求去自定义拒绝策略，自定义的方式很简单，直接实现RejectedExecutionHandler接口即可
</code></pre>
<h2 id="6问了一下mysql索引">6.问了一下mysql索引</h2>
<p>只知道使用了B-tree ,没能详细的回答。</p>
<h2 id="7了解网络不说一下tcp的三次握手">7.了解网络不，说一下tcp的三次握手</h2>
<p>说了一下 ，没有深问</p>
<h2 id="8笔试第二道题没有ac你有没有之后想过">8.笔试第二道题没有ac，你有没有之后想过。</h2>
<p>笔试第二道当时都不太记得了，就说了没有。</p>
<p>总体感觉就是对于非计算机专业的学生，感觉对你能力存在一种质疑。也没具体问啥，果然凉凉，还是自己太菜，哈哈，体验一下，秋招再战。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[腾讯暑期实习一轮复试复盘]]></title>
        <id>https://sutn.github.io/post/腾讯暑期实习一轮复试复盘/</id>
        <link href="https://sutn.github.io/post/腾讯暑期实习一轮复试复盘/">
        </link>
        <updated>2021-04-21T03:31:24.000Z</updated>
        <content type="html"><![CDATA[<h1 id="腾讯暑期实习一轮复试复盘">腾讯暑期实习一轮复试复盘</h1>
<p>背景：参加了4月18日笔试，笔试一道AC都没有，接到面试通知，4月21日下午。</p>
<p>这一本人第一次正正经经的参加面试，抱着尝试一下的态度，很紧张，算是一次体验，果不其然被刷了，投的岗位是JAVA后端研发，面试官所在部门使用Golang开发，问的java问题不多。下面复盘下面试官所问的问题：</p>
<p>面试官：先自我介绍一下把</p>
<p>楼主：巴拉巴拉一大堆</p>
<p>所问的问题根据记忆有以下：</p>
<h3 id="1网络osi有几层模型自己不太熟悉没全部回答上来说了几个层"><strong>1.网络OSI有几层模型？（自己不太熟悉，没全部回答上来，说了几个层）</strong></h3>
<p>参考：https://blog.csdn.net/marui156/article/details/77759418</p>
<p>7层，由低到高具体分为：物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。</p>
<figure data-type="image" tabindex="1"><img src="https://sutn.github.io//post-images/%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84.png" alt="网络结构" loading="lazy"></figure>
<p><strong>每一层作用</strong></p>
<p>第7层应用层—直接对应用程序提供服务，应用程序可以变化，但要包括电子消息传输</p>
<p>第6层表示层—格式化数据，以便为应用程序提供通用接口。这可以包括加密服务</p>
<p>第5层会话层—在两个节点之间建立端连接。此服务包括建立连接是以全双工还是以半双工的方式进行设置，尽管可以在层4中处理双工方式</p>
<p>第4层传输层—常规数据递送－面向连接或无连接。包括全双工或半双工、流控制和错误恢复服务</p>
<p>第3层网络层—本层通过寻址来建立两个节点之间的连接，它包括通过互连网络来路由和中继数据</p>
<p>第2层数据链路层—在此层将数据分帧，并处理流控制。本层指定拓扑结构并提供硬件寻址</p>
<p>第1层物理层—原始比特流的传输</p>
<p><strong>每一层物理结构</strong></p>
<p>应用层 ……………….计算机：应用程序，如FTP，SMTP，HTTP</p>
<p>表示层 ……………….计算机：编码方式，图像编解码、URL字段传输编码</p>
<p>会话层 ……………….计算机：建立会话，SESSION认证、断点续传</p>
<p>传输层 ……………….计算机：进程和端口 TCP UDP</p>
<p>网络层…………………网络：路由器，防火墙、多层交换机</p>
<p>数据链路层 ………..网络：网卡，网桥，交换机</p>
<p>物理层…………………网络：中继器，集线器、网线、HUB</p>
<h3 id="2每个层有哪些协议说一下"><strong>2.每个层有哪些协议，说一下。</strong></h3>
<p>HTTP  TCP UDP</p>
<h3 id="3说一下tcp协议">3.说一下TCP协议</h3>
<h3 id="4说一下http协议-http10-http11-http20">4.说一下HTTP协议  HTTP1.0  HTTP1.1 HTTP2.0</h3>
<h3 id="5tcp中syn发送的是什么">5.TCP中syn发送的是什么</h3>
<h3 id="6说一下java的io-nio-模型">6.说一下java的IO NIO 模型</h3>
<h3 id="7使用tcp协议设计一个发送信息的功能你会考虑哪些方面">7.使用TCP协议设计一个发送信息的功能，你会考虑哪些方面</h3>
<h3 id="8-使用过的linux命令有哪些">8. 使用过的linux命令有哪些</h3>
<h3 id="9使用过的git命令有哪些">9.使用过的git命令有哪些</h3>
<h3 id="10说下一linux进程和线程线程之间如何通信">10.说下一linux进程和线程，线程之间如何通信。</h3>
<h3 id="11java垃圾回收机制">11.java垃圾回收机制</h3>
<h3 id="12使用过哪些数据库一些数据库的知识答不上来mysql的层级体系权限管理">12.使用过哪些数据库，一些数据库的知识，答不上来，mysql的层级体系，权限管理</h3>
<h3 id="13然后给了一道笔试题leetcode困难面试官说不难直接崩了-在线写">13.然后给了一道笔试题，leetcode困难，面试官说不难，直接崩了。在线写</h3>
<p>https://leetcode-cn.com/problems/longest-increasing-path-in-a-matrix/</p>
<p>面试官一直提示引导你，本人太菜，写不出来。面试官会问算法复杂度。</p>
<p>其他的不记得了，总共大概一个小时左右，面试官人挺好的，就是自己太菜了。记录一下。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://sutn.github.io/post/hello-gridea/</id>
        <link href="https://sutn.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>